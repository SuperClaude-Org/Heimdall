#!/usr/bin/env bun

/**
 * Heimdall CLI
 * Simple launcher that runs opencode with Heimdall branding
 */

import { spawn } from 'child_process';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const rootDir = join(__dirname, '..');

// Set Heimdall environment
process.env.HEIMDALL_VERSION = '0.1.0';

// Display branding for help
if (process.argv.length === 2 || process.argv.includes('--help')) {
  console.log(`
╦ ╦╔═╗╦╔╦╗╔╦╗╔═╗╦  ╦  
╠═╣║╣ ║║║║ ║║╠═╣║  ║  
╩ ╩╚═╝╩╩ ╩═╩╝╩ ╩╩═╝╩═╝

Heimdall v${process.env.HEIMDALL_VERSION} - AI-powered CLI assistant
Based on opencode
`);
}

// Run opencode from vendor directory
const args = process.argv.slice(2);
const child = spawn('bun', [
  'run',
  '--conditions=development',
  'packages/opencode/src/cli/bootstrap.ts',
  ...args
], {
  stdio: 'inherit',
  env: process.env,
  cwd: join(rootDir, 'vendor', 'opencode')
});

child.on('exit', (code) => {
  process.exit(code || 0);
});

child.on('error', (err) => {
  console.error('Failed to start Heimdall:', err);
  process.exit(1);
});